version: '3.8'

services:
  # Backend Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: bulkmail-backend
    restart: unless-stopped
    env_file: .env.prod
    environment:
      - NODE_ENV=production
      - DB_HOST=db
      - REDIS_HOST=redis
    ports:
      - "3000:3000"
    depends_on:
      - db
      - redis
    networks:
      - bulkmail-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: bulkmail-frontend
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - bulkmail-network
    environment:
      - VITE_API_URL=/api

  # Database Service
  db:
    image: postgres:13-alpine
    container_name: bulkmail-db
    restart: unless-stopped
    env_file: .env.prod
    environment:
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-postgres}
      - POSTGRES_DB=${DB_NAME:-bulkmail}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - bulkmail-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres}"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Redis Service
  redis:
    image: redis:6-alpine
    container_name: bulkmail-redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD:-your_redis_password}
    volumes:
      - redis_data:/data
    networks:
      - bulkmail-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

# Networks
networks:
  bulkmail-network:
    driver: bridge

# Volumes
volumes:
  postgres_data:
  redis_data:
